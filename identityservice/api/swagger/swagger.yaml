swagger: "2.0"
info:
  version: "0.0.1"
  title: IdentityService
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
  - text/html
  - text/plain
paths:
  /RegisterClient:
    # binds a127 app logic to a route
    x-swagger-router-controller: IdentityController
    get:
      description: Returns CLientdId and Secret
      # used as the method name of the controller
      operationId: register_client
      parameters:
        - name: name
          in: query
          description: The app name to be registered
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ClientRegistrationResposne"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /GenerateToken:
    # binds a127 app logic to a route
    x-swagger-router-controller: IdentityController
    get:
      description: Returns JWT token for user
      # used as the method name of the controller
      operationId: Generate_Token
      parameters:
        - name: userName
          in: query
          description: The user for the app
          required: true
          type: string
      security:
        - APIKeyHeader: []
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/JWTToken"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /AuthenticateToken:
      # binds a127 app logic to a route
      x-swagger-router-controller: IdentityController
      get:
        description: Checks if JWT is valid
        # used as the method name of the controller
        operationId: Authorise 
        parameters:
          - name: token
            in: query
            description: The app name to be registered
            required: true
            type: string
        security:
          - APIKeyHeader: []
        responses:
          "200":
            description: Success
            schema:
              type: string
          "401":
            description: UnAuthorized
           
          # responses may fall through to errors
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  ClientRegistrationResposne:
    required:
      - clientId
      - clientSecret
    properties:
      clientId:
        type: string
      clientSecret:
        type: string
  JWTToken:
    required:
      - token
    properties:
       token:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
securityDefinitions:
   # X-API-Key: abcdef12345
   APIKeyHeader:
     type: apiKey
     in: header
     name: X-API-Key
